{
  "lesson.regexForSeo.starter.title": "Regex для SEO",
  "lesson.regexForSeo.starter.description": "Regex - це набір регулярних виразів, які часто використовуються в багатьох сферах, особливо людьми, які хочуть підвищити свою продуктивність. Переваги використання Regex для SEO полягають у тому, що він полегшує аналіз великих даних і написання більш якісних фільтрів. Ми рекомендуємо почати з підручника `Regex 101`, якщо ви новачок у Regex. \\n\\nПочніть з введення `OK` в полі Regex, щоб перейти до першого кроку і отримати доступ до більш детальних пояснень.",

  "lesson.regexForSeo.usage.title": "Приклади використання",
  "lesson.regexForSeo.usage.description": "Ви можете використовувати Regex для SEO на таких платформах, як `Google Analytics`, `Google Data Studio`, `Google Sheets`, `Google Search Console`, `Ahrefs`, `Deepcrawl`, `Screaming Frog`. Він також часто використовується у файлах `.htaccess` та `robots.txt (regex-подібний синтаксис)`.\\n\\nНижче наведено приклад регексу, який вибере зі списку лише тексти, що починаються з `Google`.",

  "lesson.regexForSeo.basics.title": "Базові поняття",
  "lesson.regexForSeo.basics.description": "Давайте розглянемо деякі Regexp, які ви будете часто використовувати. Рекомендуємо вам переглянути підручник `Regex 101`, щоб дізнатися про них більше. Введіть `Yes`, щоб почати.",

  "lesson.regexForSeo.or.title": "Або оператор `|`",
  "lesson.regexForSeo.or.description": "Ми використовуємо оператор або `|` для фільтрації декількох виразів. Наприклад, відфільтруйте текст, що містить `seo` і `regex`, написавши ці два слова, розділивши їх оператором або `|`.",

  "lesson.regexForSeo.optional.title": "Необовʼязковий оператор `?`",
  "lesson.regexForSeo.optional.description": "Ми використовуємо його, щоб вказати, що вираз або символ є необовʼязковим. Наприклад, ми хочемо відфільтрувати текст, що містить як `http`, так і `https`. Для цієї операції можна використати оператор або `|`, але для цих двох майже однакових слів є кращий спосіб.\\n\\nУ цьому прикладі літера `s` є необовʼязковою. Замість неї додайте знак питання `?` в кінці літери `s`.",

  "lesson.regexForSeo.any.title": "Що завгодно `.*`",
  "lesson.regexForSeo.any.description": "У regex крапка `.` може збігатися з будь-чим, включно з пробілами. Але ця відповідність є лише для одного символу, де вона використовується. Символ зірочки `*` означає, що попередній елемент не існує взагалі або зустрічається в тексті більше одного разу. Коли вони використовуються разом, це означає, що в місці використання може бути елемент необмеженої довжини.\\n\\nНижче наведено різні ключові слова. Додайте `.*` у кінці регексу, щоб записати вираз, який починається зі слова `how to write` і збігається з усім, що знаходиться після нього.",

  "lesson.regexForSeo.contains.title": "Містить",
  "lesson.regexForSeo.contains.description": "Щоб відфільтрувати текст, який містить слова або фрази, які ми шукаємо, ми пишемо слово, яке ми шукаємо, між двома фразами `.*`, які збігаються з усіма. Наприклад, введіть `.*buy.*`, щоб відфільтрувати те, що містить слово `buy`.",

  "lesson.regexForSeo.negated.title": "Заперечні набори символів `[^abc]`",
  "lesson.regexForSeo.negated.description": "Ми використовуємо заперечні набори символів `[^]` для позначення символів, які ми не хочемо включати. Символи, які ми не хочемо включати, пишуться у квадратних дужках з косою рискою на початку. Нижче наведено символи `http` і `https`. Оскільки `http` зустрічається в обох варіантах, програма також вибере `https`. Введіть `[^s]` після літери `p`, щоб виключити літеру `s`.",

  "lesson.regexForSeo.caret.title": "Знак каретки. `^`",
  "lesson.regexForSeo.caret.description": "Припустимо, у нас є список URL-адрес, і ми хочемо знайти тільки ті, які починаються з `http`. Але URL-адреси можуть містити `http` і в інших частинах, окрім початку. Тому додайте на початку наступного виразу символ `^`, щоб відфільтрувати лише ті, що починаються з `http`.",

  "lesson.regexForSeo.dollarAndEscape.title": "Знак долара `$` та символ екранування `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "Знову у нас є список URL-адрес. Ми хочемо знайти лише ті URL-адреси, які закінчуються на `.htm`.\\n\\nОскільки крапка `.` є спеціальним символом, який збігається з усіма, нам спочатку потрібно вимкнути крапку перед `htm` за допомогою символу екранування `\\`. Це стосується всіх спеціальних символів.\\n\\nТепер додайте знак `$` у кінець виразу. Це гарантує, що текст, який буде відфільтровано, закінчується виразом, записаним перед ним.",

  "lesson.regexForSeo.limitation.title": "Обмеження по довжині `{n}`",
  "lesson.regexForSeo.limitation.description": "Можливо, ви захочете відфільтрувати результати за довжиною символів. Наприклад, щоб відфільтрувати URL-адреси довжиною `35` символів, введіть число, яке ви хочете використовувати для довжини, `{35}`, використовуючи фігурні дужки в кінці періоду `.`.",

  "lesson.regexForSeo.maxLimitation.title": "Обмеження по довжині (Максимум) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "Щоб відфільтрувати URL-адреси з максимальною довжиною `35` символів, введіть `{1,35}` мінімальне і максимальне значення довжини, які ми будемо використовувати для довжини, використовуючи фігурні дужки в кінці періоду `.`.",

  "lesson.regexForSeo.minLimitation.title": "Обмеження по довжині (Мінімум) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "Щоб відфільтрувати URL-адреси з мінімальною довжиною `35` символів, введіть `{35,}`, використовуючи фігурні дужки в кінці періоду і закінчуючи кому для мінімального числового значення, яке ми будемо використовувати для довжини.",

  "lesson.regexForSeo.robots.title": "robots.txt (Regexp-подібний синтаксис)",
  "lesson.regexForSeo.robots.description": "Ось приклад regex-подібного використання у файлі `robots.txt`. У прикладі вказано, що боти не повинні сканувати посилання з розширенням `pdf`.",

  "lesson.regexForSeo.htaccess.title": ".htaccess",
  "lesson.regexForSeo.htaccess.description": "Ось приклад використання regex у файлі `.htaccess`. У прикладі посилання з розширенням `php` перенаправляються на розширення `html` з кодом `301`.",

  "lesson.regexForSeo.outro.title": "Додаткова інформація",
  "lesson.regexForSeo.outro.description": "Знання regex - це навичка, яка підвищує продуктивність на будь-якій платформі, що дозволяє використовувати regex. Як тільки ви почнете використовувати його і вдосконалите цю навичку, вона допоможе вам швидше виконувати багато повторюваних завдань і заощадити час для інших справ. Щоб краще зрозуміти основи Regex, ви можете відвідати підручник `Regex 101`. Ви можете скористатися сторінкою `Playground`, щоб протестувати ваші вирази на текстах."
}
