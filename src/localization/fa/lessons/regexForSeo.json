{
  "lesson.regexForSeo.starter.title": "ریجکس برای سئو",
  "lesson.regexForSeo.starter.description": "ریجکس مجموعه ای از عبارات منظم است که اغلب در بسیاری از زمینه ها استفاده می شود، به ویژه توسط افرادی که می خواهند بهره وری خود را افزایش دهند. مزایای استفاده از ریجکس در سئو این است که تجزیه و تحلیل داده های بزرگ و نوشتن فیلترهای پیچیده تر را آسان تر مکیکند. توصیه میکنیم که اگر تازه وارد هستید، با آموزش `Regex 101` شروع کنید.\\n \\n با تایپ `OK` در قسمت `regex` شروع کنید تا به مرحله اول بروید و به توضیحات دقیق تری دسترسی پیدا کنید.",

  "lesson.regexForSeo.usage.title": "موارد استفاده",
  "lesson.regexForSeo.usage.description": "می‌توانید از ریجکس برای سئو در پلتفرم‌هایی مانند `Google Analytics`، `Google Data Studio`، `Google Sheets`، `Google Search Console`، `Ahrefs`، `Deepcrawl`، `Screaming Frog` استفاده کنید.\\n\\n در زیر یک ریجکس نمونه میبینید که عبارت هایی را انتخاب میکند که در اول خود `Google` دارند. ",

  "lesson.regexForSeo.basics.title": "مبانی",
  "lesson.regexForSeo.basics.description": "بیایید نگاهی به برخی از مبانی ریجکس بیاندازیم که اغلب از آنها استفاده خواهید کرد. توصیه میکنیم برای کسب اطلاعات بیشتر در مورد این موارد، آموزش `Regex 101` را مرور کنید. برای شروع `Yes` را تایپ کنید.",

  "lesson.regexForSeo.or.title": "عملگر یا `|`",
  "lesson.regexForSeo.or.description": "ما از عملگر 'یا' `|` برای فیلتر کردن چند عبارت استفاده می کنیم. به عنوان مثال، متن حاوی `seo` و `regex` را با نوشتن دو کلمه فیلتر کنید و آنها را با عملگر 'یا' `|` از هم جدا کنید.",

  "lesson.regexForSeo.optional.title": "عملگر اختیاری `?`",
  "lesson.regexForSeo.optional.description": "ما از آن برای بیان اختیاری بودن یک عبارت یا کاراکتر استفاده می کنیم. به عنوان مثال ما میخوایم متن حاوی هر دو کلمه `http` و `https` را فیلتر کنیم. میتوانیم از عملگر `|` استفاده کنیم، اما راه بهتری برای این دو کلمه تقریبا مشابه وجود دارد.\\n\\n در این مثال حرف s اختیاری است. پس میتوانیم علامت سوال `?` را در انتهای حرف `s` قرار دهیم.",

  "lesson.regexForSeo.any.title": "هر چیزی .*.",
  "lesson.regexForSeo.any.description": "در ریجکس علامت نقطه `.` یعنی می تواند با هر چیزی، از جمله فضاها مطابقت داشته باشد. اما این مطابقت فقط برای یک کاراکتر است که در آن استفاده می شود. کاراکتر ستاره * به این معنی است که مورد قبل اصلا وجود ندارد یا بیش از یک بار در متن وجود دارد. وقتی این دو با هم استفاده می شوند، به این معنی است که می تواند عنصری با طول نامحدود در جایی که استفاده می شود وجود داشته باشد.\\n\\n در زیر کلمات کلیدی مختلف آورده شده است. `.*` را به انتهای ریجکس اضافه کنید تا عبارتی را بنویسید که با `how to write` شروع می شود و هر چیزی در ادامه آن بیاید ، دارای مطابقت است.",

  "lesson.regexForSeo.contains.title": "فیلترینگ",
  "lesson.regexForSeo.contains.description": "برای فیلتر کردن متنی که حاوی کلمات یا عباراتی است که به دنبال آن هستیم، کلمه مورد نظر خود را بین دو عبارت `.*` مینوسیم که با همه چیز مطابقت دارد. به عنوان مثال `.*buy.*` را تایپ کنید تا مواردی که شامل کلمه `buy` میشوند را فیلتر کنید.",

  "lesson.regexForSeo.negated.title": "لیست کارکتر منفی `[^abc]`",
  "lesson.regexForSeo.negated.description": "ما از لیست کارکتر منفی `[^]` برای نشان دادن کاراکترهایی استفاده می‌کنیم که نمی‌خواهیم درگیر شوند. کاراکترهایی که نمیخواهیم شامل آنها شوند، در براکت با یک علامت هَت ^ آورده شده اند. در زیر `http` و `https` آورده شدهاند. از آنجایی که `http` در هر دو وجود دارد، `https` را نیز انتخاب می کند. `[^s]` را بعد از حرف `p` تایپ کنید تا حرف `s` حذف شود.",

  "lesson.regexForSeo.caret.title": "علامت هَت `^`",
  "lesson.regexForSeo.caret.description": "فرض کنید فهرستی از URLها داریم و می‌خواهیم فقط آن آدرس‌هایی را پیدا کنیم که با `http` شروع می‌شوند. اما URL ها در قسمت های مختلف، غیر از ابتدای خود حاوی `http` نیز هستند. بنابراین یک `^` به ابتدای عبارت زیر اضافه کنید تا فقط مواردی که با `http` شروع می شوند فیلتر شوند.",

  "lesson.regexForSeo.dollarAndEscape.title": "علامت دلار `$` و کاکتر فرار `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "دوباره لیستی از URL ها را داریم. ما می خواهیم فقط آن URL هایی را پیدا کنیم که به `.htm` ختم می شوند.\\n\\\n نماد `.` یک کاراکتر ویژه است که با همه چیز مطابقت دارد، ابتدا باید با استفاده از کاراکتر فرار `\\` خاصیت نماد `.` را غیرفعال کنیم. این برای همه کاراکترهای خاص صدق می کند.\\n\\n سپس علامت `$` را به انتهای عبارت اضافه کنید. تا تضمین کند که عبارت حتما باید در آخر جمله باشد.",

  "lesson.regexForSeo.limitation.title": "محدودیت طول `{n}`",
  "lesson.regexForSeo.limitation.description": "ممکن است بخواهیم نتایج را بر اساس طول کاراکتر فیلتر کنیم. به عنوان مثال، برای فیلتر کردن URL هایی که `35` کاراکتر دارند،باید `{35}` را بعد از علامت `.` قرار دهید.",

  "lesson.regexForSeo.maxLimitation.title": "محدودیت طول (حداکثر) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "برای فیلتر کردن URL هایی با طول حداکثر 35 کاراکتر، حداقل و حداکثر مقادیر عددی را در آکولاد به شکل `{1,35}` تایپ میکنید و بعد از نماد `.` قرار میدهید.",

  "lesson.regexForSeo.minLimitation.title": "محدودیت های طول (حداقل) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "برای فیلتر کردن URL هایی با طول حداقل 35 کاراکتر، حداقل مقدار عددی را همراه علامت `,` در آکولاد به شکل `{35,}` تایپ میکنید و بعد از نماد `.` قرار میدهید.",

  "lesson.regexForSeo.robots.title": "robots.txt (regex-like syntax)",
  "lesson.regexForSeo.robots.description": "اینجا یک مثال از استفاده regex-like در فایل `robots.txt` است. این مثال بیان میکند که رباتها نباید لینکهایی با پسوند `pdf` را کراول کنند.",

  "lesson.regexForSeo.htaccess.title": "htaccess",
  "lesson.regexForSeo.htaccess.description": "در اینجا نمونه ای از استفاده از ریجکس در فایل `.htaccess` آورده شده است. در مثال، لینک هایی با فرمت `php` به فرمت های `html` با کد 301 هدایت می شوند.",

  "lesson.regexForSeo.outro.title": "حرف آخر",
  "lesson.regexForSeo.outro.description": "دانستن ریجکس یک مهارت است که به بهبود بهره وری در هر پلتفرم که اجازه استفاده از ریجکس را میدهد، کمک میکند. هنگامی که شروع به استفاده از آن میکنید و این مهارت را بهبود میبخشید، به شما کمک خواهد کرد تا وظایف تکراری زیادی را سریع تر انجام دهید و زمان کمتری برای کارهای دیگر صرف کنید. برای بهتر فهمیدن اصول ریجکس، میتوانید به آموزش `Regex 101` مراجعه کنید. شما میتوانید از صفحه `زمین تمرین` برای تست عبارات خود روی متون خود استفاده کنید."
}