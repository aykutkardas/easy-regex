{
  "lesson.regexForSeo.starter.title": "Regex para SEO",
  "lesson.regexForSeo.starter.description": "Regex es un conjunto de expresiones regulares que son usadas con frecuencia en muchas área, especialmente por personas que desean aumentar su productividad. Las ventajas de usar Regex para SEO son que este facilita el análisis de grandes volúmenes de información y la escritura de filtros más completos. Te recomendamos comenzar con el tutorial `Regex 101` si eres nuevo en Regex. \\n\\nEmpieza escribiendo `OK` en el campo de Regex para proceder con los primeros pasos y acceder a una explicación más detallada.",

  "lesson.regexForSeo.usage.title": "Casos de Uso",
  "lesson.regexForSeo.usage.description": "Puedes usar Regex for SEO en plataformas como `Google Analytics`, `Google Data Studio`, `Google Sheets`, `Google Search Console`, `Ahrefs`, `Deepcrawl`, `Screaming Frog`. También es usado frecuentemente en archivos `.htaccess` y `robots.txt (regex-like syntax)`.\\n\\nA continuación se muestra un ejemplo de regex que seleccionara de la lista solo los textos que empiecen con `Google`.",

  "lesson.regexForSeo.basics.title": "Básicos",
  "lesson.regexForSeo.basics.description": "Echemos un vistazo a algunos Regexes que usaras frecuentemente. Te recomendamos que revises el tutorial `Regex 101` para aprender más sobre esto. Escribe `Yes` para empezar.",

  "lesson.regexForSeo.or.title": "Operador Or `|`",
  "lesson.regexForSeo.or.description": "Usamos el operador Or `|` para filtrar múltiples expresiones. Por ejemplo, filtra el texto que contiene `seo` y `regex` escribiendo las dos palabras separadas por el operador Or `|`.",

  "lesson.regexForSeo.optional.title": "Operador Opcional `?`",
  "lesson.regexForSeo.optional.description": "Lo usamos para expresar que una expresión o un carácter es opcional. Por ejemplo, queremos filtrar el texto que contiene ambos `http` y `https`. Podemos usar el operador Or `|` para esta operación, pero hay una mejor manera para estas dos palabras casi idénticas.\\n\\nEn este ejemplo, la letra `s` es opcional. Instead, add a question mark `?` to the end of the letter `s`.",

  "lesson.regexForSeo.any.title": "Cualquier carácter `.*`",
  "lesson.regexForSeo.any.description": "In regex, the period `.` can match anything, including spaces. But this match is only for a single character where it is used. The asterisk character `*` means that the preceding item does not exist at all or occurs more than once in the text. When the two are used together, it means that there can be an element of unlimited length where used.\\n\\nBelow are various keywords. Add `.*` to the end of the regex to write the expression that starts with `how to write` and matches everything after it.",

  "lesson.regexForSeo.contains.title": "Contiene",
  "lesson.regexForSeo.contains.description": "To filter the text that contains the words or phrases we're looking for, we write the word we're looking for between our two phrases `.*` that match everything. Por ejemplo, type `.*buy.*` to filter out what includes `buy`.",

  "lesson.regexForSeo.negated.title": "Negación de un conjunto caracteres `[^abc]`",
  "lesson.regexForSeo.negated.description": "We use the negated character sets `[^]` to denote characters we don't want to be included. The characters we do not want to be included are written in square brackets with a caret at the beginning. Below are both `http` and `https`. Since `http` occurs in both, it will also choose `https`. Type `[^s]` after the letter `p` to exclude the letter `s`.",

  "lesson.regexForSeo.caret.title": "Signo de Intercalación `^`",
  "lesson.regexForSeo.caret.description": "Let's say we have a list of URLs, and we want to find only those URLs that start with `http`. But URLs also contain `http` in different parts other than their beginning. So add a caret `^` to the beginning of the following expression to filter out only those starting with `http`.",

  "lesson.regexForSeo.dollarAndEscape.title": "Signo de Dólar `$` y Carácter de Escape `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "Again we have a list of URLs. We want to find only those URLs ending in `.htm`.\\n\\nSince the period `.` is a special character that matches everything, we first need to disable the period before `htm` using the escape character `\\`. This applies to all special characters.\\n\\nThen add a `$` sign to the end of the expression. This ensures that the text to be filtered ends with the expression written before it.",

  "lesson.regexForSeo.limitation.title": "Restricciones de Longitud `{n}`",
  "lesson.regexForSeo.limitation.description": "We may want to filter the results by character lengths. Por ejemplo, to filter URLs that are `35` characters long, type the number you want to use for the length, `{35}`, using curly braces at the end of the period `.`.",

  "lesson.regexForSeo.maxLimitation.title": "Restricciones de Longitud (Máximo) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "To filter URLs with a maximum length of `35` characters, type `{1,35}` the minimum and maximum number values we will use for the length, using curly braces at the end of the period `.`.",

  "lesson.regexForSeo.minLimitation.title": "Restricciones de Longitud (Mínimo) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "To filter URLs with a minimum length of `35` characters, type `{35,}` using curly braces at the end of the period and ending with a comma for the minimum number value we will use for the length.",

  "lesson.regexForSeo.robots.title": "robots.txt (regex-like syntax)",
  "lesson.regexForSeo.robots.description": "Here is an example of regex-like usage in the `robots.txt` file. The example states that bots should not crawl links with the extension `pdf`.",

  "lesson.regexForSeo.htaccess.title": ".htaccess",
  "lesson.regexForSeo.htaccess.description": "Here is an example of using regex in the `.htaccess` file. In the example, `php` extension links are directed to `html` extensions with `301` code.",

  "lesson.regexForSeo.outro.title": "Outro",
  "lesson.regexForSeo.outro.description": "Regex knowledge is a skill that increases productivity on any platform that allows you to use regex. Once you start using it and improve this skill, it will help you complete many repetitive tasks faster and save time for other things. To better understand the basics of Regex, you can visit the `Regex 101` tutorial. You can use the `Playground` page to test your expressions on your texts."
}
